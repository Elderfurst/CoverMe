@model IEnumerable<TimeZoneInfo>

@{
    ViewData["Title"] = "- Home";
}

<!--Include CDN links for Select2 -->
<link href="https://cdn.jsdelivr.net/npm/select2@4.0.12/dist/css/select2.min.css" rel="stylesheet" />
<link href="https://cdn.jsdelivr.net/npm/select2-bootstrap-theme@0.1.0-beta.10/dist/select2-bootstrap.min.css" rel="stylesheet" />
<script src="https://cdn.jsdelivr.net/npm/select2@4.0.12/dist/js/select2.full.min.js"></script>

<!--International Telephone Input Scripts-->
<link href="~/lib/intl-tel-input/css/intlTelInput.min.css" rel="stylesheet" />
<script src="~/lib/intl-tel-input/js/intlTelInput.min.js"></script>


<div class="text-center">
    <h1><span class="oi oi-rain"></span> CoverMe</h1>
    <h5>Never be surprised by rain again.</h5>
</div>

<div class="row">
    <div class="col-sm-6 offset-sm-3 text-center">
        <small>
            A simple service that alerts you when you should bring an umbrella with you.
            Register below using either your e-mail address or phone number, select a location, time, and rain threshold.
            Once you sign up you'll receive notifications on days when there is a chance of rain greater than your selected threshold.
        </small>
    </div>
</div>

<div class="row mt-2">
    <form class="col-sm-6 offset-sm-3" onsubmit="onClickSignUp(event)">
        <div class="form-group">
            <label for="inputEmailAddress">Email Address</label>
            <input type="email" class="form-control" id="inputEmailAddress" />
        </div>
        <div class="col-sm-2 offset-sm-5 text-center">or</div>
        <div class="form-group">
            <label for="inputPhoneNumber">Phone Number</label>
            <input type="tel" class="form-control" id="inputPhoneNumber" />
        </div>
        <div class="form-group">
            <label for="inputLocation">Select a Location</label>
            <select class="address-search form-control select2-single" style="width: 100%;" id="inputLocation" required></select>
        </div>
        <div class="form-group">
            <label for="inputTime">Notification Time</label>
            <input type="time" class="form-control" id="inputTime" required/>
        </div>
        <div class="form-group">
            <label for="inputTimeZone">TimeZone</label>
            <select name="TimeZone" class="form-control" id="inputTimeZone" required>
                @foreach (var timeZone in Model)
                {
                    <text>
                        <option value="@timeZone.Id">@timeZone.DisplayName</option>
                    </text>
                }
            </select>
        </div>
        <div class="form-group">
            <label for="inputRainThreshold">Rain Minimum Percentage <small>(Number between 0 and 100)</small></label>
            <input type="number" max="100" min="0" class="form-control" id="inputRainThreshold" required/>
        </div>
        <div class="form-group">
            <button type="submit" class="form-control btn-info" id="signUpButton">Sign Up</button>
        </div>
        <div class="form-group text-center">
            <small><u><a asp-controller="Home" asp-action="Unsubscribe">Click Here to Unsubscribe</a></u></small>
        </div>
    </form>
</div>


<script>
    // Initialize phone input
    var phoneInput = document.querySelector("#inputPhoneNumber");
    var iti = window.intlTelInput(phoneInput, {
        utilsScript: "lib/intl-tel-input/js/utils.js",
    });

    $(document).ready(function () {
        $('.address-search').select2({
            theme: 'bootstrap',
            width: 'resolve',
            ajax: {
                delay: 250, // Wait before sending the request
                url: '/Location/Search',
                dataType: 'json',
                data: function (params) {
                    return {
                        query: params.term
                    };
                },
                processResults: function (data) {
                    return {
                        results: data
                    };
                }
            },
            placeHolder: 'Search for an address to use',
            minimumInputLength: 3,
            templateResult: formatLocation,
            templateSelection: formatLocationSelection
        });
    });

    function formatLocation(location) {
        if (location.loading) {
            return location.text;
        }

        return location.fullAddress;
    }

    function formatLocationSelection(location) {
        return location.fullAddress;
    }

    function onClickSignUp(event) {
        // Prevent the default onSubmit event
        event.preventDefault();

        // Disable the sign up button to prevent spamming
        $("#signUpButton").prop("disabled", true);

        const location = $("#inputLocation").val().split(";");

        $.post("Notification/RegisterForNotifications",
            {
                requestBody: {
                    phoneNumber: iti.getNumber(intlTelInputUtils.numberFormat.E164),
                    phoneNumberCountryCode: iti.getSelectedCountryData()["iso2"],
                    emailAddress: $("#inputEmailAddress").val(),
                    latitude: location[0],
                    longitude: location[1],
                    timeToSend: $("#inputTime").val(),
                    timeZoneId: $("#inputTimeZone").val(),
                    rainThreshold: $("#inputRainThreshold").val(),
                }
            })
            .done(function () {
                new Toast({
                    message: "Notification request successfully submitted!",
                    type: "success",
                });
            })
            .fail(function () {
                new Toast({
                    message: "Something went wrong. Please try again.",
                    type: "danger",
                });
            })
            .always(function () {
                $("#signUpButton").prop("disabled", false);
            });;
    }
</script>


